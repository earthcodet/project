/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Data.Book;
import Service.BookService;
import java.awt.Color;
import java.awt.Font;
import static Form.Header.user_name;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author ASUS
 */
public class Main extends javax.swing.JInternalFrame {

    public static ArrayList<Book> arr;
    String getBookName;
    int getBookPrice;
    String username = user_name.getText().toString();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        getContentPane().setBackground(new Color(255, 255, 255));

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ปก");
        model.addColumn("ชื่อหนังสือ");
        model.addColumn("ราคา");

        table.setRowHeight(80);
        table.setFillsViewportHeight(true);
        JTableHeader header = table.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 20));
        arr = BookService.showBook();

        for (int i = 0; i < arr.size(); i++) {
            String eBookName = arr.get(i).eBookName;
            Object pic = arr.get(i).eBookCover_id;
            BookService.getImage(eBookName, pic);
            BufferedImage tempImge = null;
            try {
                tempImge = ImageIO.read(new File("src/image/" + eBookName + ".png"));
            } catch (IOException e) {

            }
            model.addRow(new Object[]{tempImge, arr.get(i).eBookName, arr.get(i).eBookPrice});
        }
        table.setModel(model);
        table.getColumn("ปก").setCellRenderer(new BookService());
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) table.getDefaultRenderer(Object.class);
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        table.getColumnModel().getColumn(0).setPreferredWidth(1);  

        arr = BookService.findBookByName("Book1");
        for (int i = 0; i < arr.size(); i++) {
            String eBookName = arr.get(i).eBookName;
            labelBookName.setText(eBookName);
            String authorName = arr.get(i).authorName;
            labelAuthorName.setText(authorName);
            String publisherName = arr.get(i).publisherName;
            labelPublisherName.setText(publisherName);
            String eBookKinds = arr.get(i).eBookKinds;
            labelEbookKinds.setText(eBookKinds);
            int fileBookSize = arr.get(i).fileBookSize;
            String fileBookSizeString = Integer.toString(fileBookSize);
            labelFileBookSize.setText(fileBookSizeString);
            int eBookCoverPrice = arr.get(i).eBookCoverPrice;
            String eBookCoverPriceString = Integer.toString(eBookCoverPrice);
            labelCoverPrice.setText(eBookCoverPriceString);
            int eBookPrice = arr.get(i).eBookPrice;
            String eBookPriceString = Integer.toString(eBookPrice);
            labelPrice.setText(eBookPriceString);
            int pages = arr.get(i).pages;
            String pagesString = Integer.toString(pages);
            labelPages.setText(pagesString);

            try {
                this.bookpic.setImage(ImageIO.read(new File("" + FileSystems.getDefault().getPath("src/image/" + eBookName + ".png").toAbsolutePath())));
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelPages = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        labelPublisherName = new javax.swing.JLabel();
        labelAuthorName = new javax.swing.JLabel();
        labelEbookKinds = new javax.swing.JLabel();
        labelFileBookSize = new javax.swing.JLabel();
        labelCoverPrice = new javax.swing.JLabel();
        labelPrice = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelBookName = new javax.swing.JLabel();
        btBuy = new javax.swing.JButton();
        bookpic = new Image.ImagePanel();

        getContentPane().setLayout(null);

        table.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 20, 550, 580);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("จำนวนหน้า : ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 250, 100, 30);

        labelPages.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelPages);
        labelPages.setBounds(140, 250, 100, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("ผู้แต่ง : ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(40, 50, 100, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText("หมวดหมู่ : ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 90, 100, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setText("ขนาดไฟล์ : ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 130, 100, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 102));
        jLabel6.setText("ราคาปก : ");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 170, 100, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("ราคาขาย : ");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 210, 100, 30);

        labelPublisherName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelPublisherName);
        labelPublisherName.setBounds(140, 10, 110, 30);

        labelAuthorName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelAuthorName);
        labelAuthorName.setBounds(100, 50, 150, 30);

        labelEbookKinds.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelEbookKinds);
        labelEbookKinds.setBounds(120, 90, 140, 30);

        labelFileBookSize.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelFileBookSize);
        labelFileBookSize.setBounds(130, 130, 100, 30);

        labelCoverPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelCoverPrice);
        labelCoverPrice.setBounds(120, 170, 100, 30);

        labelPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(labelPrice);
        labelPrice.setBounds(130, 210, 100, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 102));
        jLabel9.setText("สำนักพิมพ์ : ");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 10, 100, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(810, 90, 270, 290);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("สำนักพิมพ์ : ");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(70, 50, 100, 30);

        labelBookName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(labelBookName);
        labelBookName.setBounds(600, 30, 140, 40);

        btBuy.setBackground(new java.awt.Color(0, 204, 102));
        btBuy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btBuy.setText("ซื้อ");
        btBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuyActionPerformed(evt);
            }
        });
        getContentPane().add(btBuy);
        btBuy.setBounds(630, 390, 130, 50);
        getContentPane().add(bookpic);
        bookpic.setBounds(580, 90, 220, 290);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model2 = (DefaultTableModel) table.getModel();
        int selectedRowIndex = table.getSelectedRow();
        getBookName = (String) model2.getValueAt(selectedRowIndex, 1);
        getBookPrice = (int) model2.getValueAt(selectedRowIndex, 2);
        arr = BookService.findBookByName(getBookName);
        for (int i = 0; i < arr.size(); i++) {
            String eBookName = arr.get(i).eBookName;
            labelBookName.setText(eBookName);
            String authorName = arr.get(i).authorName;
            labelAuthorName.setText(authorName);
            String publisherName = arr.get(i).publisherName;
            labelPublisherName.setText(publisherName);
            String eBookKinds = arr.get(i).eBookKinds;
            labelEbookKinds.setText(eBookKinds);
            int fileBookSize = arr.get(i).fileBookSize;
            String fileBookSizeString = Integer.toString(fileBookSize);
            labelFileBookSize.setText(fileBookSizeString);
            int eBookCoverPrice = arr.get(i).eBookCoverPrice;
            String eBookCoverPriceString = Integer.toString(eBookCoverPrice);
            labelCoverPrice.setText(eBookCoverPriceString);
            int eBookPrice = arr.get(i).eBookPrice;
            String eBookPriceString = Integer.toString(eBookPrice);
            labelPrice.setText(eBookPriceString);
            int pages = arr.get(i).pages;
            String pagesString = Integer.toString(pages);
            labelPages.setText(pagesString);

            try {
                this.bookpic.setImage(ImageIO.read(new File("" + FileSystems.getDefault().getPath("src/image/" + eBookName + ".png").toAbsolutePath())));
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_tableMouseClicked

    private void btBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuyActionPerformed
      
        try {
            BookService.addBookToCarts(getBookName, getBookPrice, username);
            JOptionPane.showMessageDialog(null, "เพิ่มหนังสือเข้าตะกร้าสำเร็จ", "", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "เพิ่มหนังสือไม่สำเร็จ", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btBuyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Image.ImagePanel bookpic;
    private javax.swing.JButton btBuy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAuthorName;
    private javax.swing.JLabel labelBookName;
    private javax.swing.JLabel labelCoverPrice;
    private javax.swing.JLabel labelEbookKinds;
    private javax.swing.JLabel labelFileBookSize;
    private javax.swing.JLabel labelPages;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelPublisherName;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
